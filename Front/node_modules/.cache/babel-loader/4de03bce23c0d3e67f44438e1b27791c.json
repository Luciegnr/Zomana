{"remainingRequest":"/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/node_modules/babel-loader/lib/index.js!/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/node_modules/eslint-loader/index.js??ref--13-0!/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/src/store/product.js","dependencies":[{"path":"/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/src/store/product.js","mtime":1636123832211},{"path":"/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/node_modules/cache-loader/dist/cjs.js","mtime":1636123825619},{"path":"/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/node_modules/babel-loader/lib/index.js","mtime":1636123825442},{"path":"/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/node_modules/eslint-loader/index.js","mtime":1636123827124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/lucie/Desktop/ETNA/Bachelor/FDI/DJS2/Front/src/store/product.js"],"names":["axios","url","url2","getId","JSON","parse","window","localStorage","getItem","user_id","id","console","log","products","namespaced","state","product","shopProduct","mutations","ALL_PRODUCT","ID_PRODUCT","SHOP_PRODUCT","actions","allproduct","commit","get","response","data","productId","shopproduct","setInterval","err","deleteproduct","_id","then","res","update_product","payload","put","$snotify","error"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-catch */\n/* eslint-disable no-unused-vars */\nimport axios from \"axios\";\n// import { create_product } from \"../../../../API/controllers/products.controller\";\nconst url = \"http://localhost:3000/api/all-product\";\nconst url2 = \"http://localhost:3000/api/\";\n\nconst getId = JSON.parse(window.localStorage.getItem(\"user\"));\nvar user_id;\n\nif (getId == null) {\n  user_id = \"undefined\";\n} else {\n  user_id = getId.id;\n}\nconsole.log(user_id);\n\nconst products = {\n  namespaced: true,\n  state: {\n    products: [],\n    product: [],\n    shopProduct: [],\n  },\n  mutations: {\n    ALL_PRODUCT(state, products) {\n      state.products = products;\n    },\n    ID_PRODUCT(state, product) {\n      state.product = product;\n    },\n    SHOP_PRODUCT(state, shopProduct) {\n      state.shopProduct = shopProduct;\n    },\n  },\n  actions: {\n    async allproduct({ commit }) {\n      try {\n        const response = await axios.get(url);\n        commit(\"ALL_PRODUCT\", response.data);\n        // console.log(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n\n    async productId({ commit }, { id }) {\n      try {\n        const response = await axios.get(url2 + \"all-product-shop/\" + id);\n        commit(\"ID_PRODUCT\", response.data[0]);\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n\n    async shopproduct({ commit }, { id }) {\n      try {\n        console.log(url2 + \"product-from-shop/\" + id)\n        setInterval(async function() {\n          const response = await axios.get(url2 + \"product-from-shop/\" + id);\n          console.log(response.data)\n          commit(\"SHOP_PRODUCT\", response.data);\n        }, 100);\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n\n    async deleteproduct({ commit }, _id) {\n      try {\n        var id = _id;\n        const response = await axios\n          .delete(`${url2}delete-product/` + id._id)\n          .then((res) => {\n            console.log(\"data\", res);\n            // commit('NEW_EXPERIENCE', res.data)\n          });\n      } catch (error) {\n        throw error;\n      }\n    },\n    async update_product({ commit }, payload) {\n      try {\n        console.log(payload.data);\n\n        const response = await axios\n          .put(`${url2}modify-product/${payload.id}`, payload.data)\n          .then((res) => {\n            commit(res.data);\n            console.log(res);\n          });\n        console.log(response);\n      } catch (err) {\n        this.$snotify.error(\"Can't modify product\");\n        console.log(err);\n      }\n    },\n  },\n};\nexport default products;\n"]}]}